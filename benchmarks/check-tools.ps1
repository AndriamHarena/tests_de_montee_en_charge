# Script de v√©rification des outils install√©s
Write-Host "üîç V√©rification des outils de benchmark..." -ForegroundColor Green

# V√©rifier Python
Write-Host "üì¶ Python..." -ForegroundColor Yellow
try {
    $pythonVersion = python --version
    Write-Host "‚úÖ $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python non trouv√©" -ForegroundColor Red
}

# V√©rifier Node.js
Write-Host "üì¶ Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js non trouv√©" -ForegroundColor Red
}

# V√©rifier k6
Write-Host "üì¶ k6..." -ForegroundColor Yellow
try {
    $k6Version = k6 version
    Write-Host "‚úÖ k6 install√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå k6 non trouv√© - Ex√©cutez: .\install-tools.ps1" -ForegroundColor Red
}

# V√©rifier Artillery
Write-Host "üì¶ Artillery..." -ForegroundColor Yellow
try {
    $artilleryVersion = artillery version
    Write-Host "‚úÖ Artillery $artilleryVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Artillery non trouv√© - Ex√©cutez: npm install -g artillery" -ForegroundColor Red
}

# V√©rifier Locust
Write-Host "üì¶ Locust..." -ForegroundColor Yellow
try {
    $locustVersion = locust --version
    Write-Host "‚úÖ Locust install√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Locust non trouv√© - Ex√©cutez: pip install locust" -ForegroundColor Red
}

# V√©rifier l'API
Write-Host "üîç API BuyYourKawa..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8000/docs" -TimeoutSec 3
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ API accessible sur http://localhost:8000" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå API non accessible - D√©marrez avec: python main.py" -ForegroundColor Red
}

# V√©rifier les dossiers
Write-Host "üìÅ Structure des dossiers..." -ForegroundColor Yellow
$requiredDirs = @(
    "k6-tests\results",
    "artillery-tests\results", 
    "comparison-results"
)

foreach ($dir in $requiredDirs) {
    if (Test-Path $dir) {
        Write-Host "‚úÖ $dir" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $dir manquant" -ForegroundColor Red
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-Host "‚úÖ $dir cr√©√©" -ForegroundColor Green
    }
}

Write-Host ""
Write-Host "üéØ PROCHAINES √âTAPES:" -ForegroundColor Cyan
Write-Host "1. Si des outils manquent: .\install-tools.ps1" -ForegroundColor White
Write-Host "2. D√©marrer l'API: cd .. && python main.py" -ForegroundColor White
Write-Host "3. Lancer les tests: .\run-validation-tests.ps1 -TestType validation" -ForegroundColor White
Write-Host "4. Ou utiliser le script automatique: .\start-api-and-test.ps1" -ForegroundColor White
